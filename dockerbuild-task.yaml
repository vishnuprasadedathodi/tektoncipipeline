apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
 name: dockerbuild-task
spec:
 workspaces:
   - name: output
 steps:
   - name: ecr-login
     image: "docker.io/amazon/aws-cli:2.0.52@sha256:1506cec98a7101c935176d440a14302ea528b8f92fcaf4a6f1ea2d7ecef7edc4"
     script: |
       #!/usr/bin/env sh
       ECRPASSWORD=$(aws ecr get-login-password --region us-east-1)
       echo $ECRPASSWORD

   - name: docker-build
     image: "docker.io/library/docker:stable@sha256:18ff92d3d31725b53fa6633d60bed323effb6d5d4588be7b547078d384e0d4bf"
     env:
    # Connect to the sidecar over TCP, with TLS.
     - name: DOCKER_HOST
       value: tcp://localhost:2376
    # Verify TLS.
     - name: DOCKER_TLS_VERIFY
       value: '1'
    # Use the certs generated by the sidecar daemon.
     - name: DOCKER_CERT_PATH
       value: /certs/client
     script: |
       #!/usr/bin/env sh
       echo $ECRPASSWORD
       docker version
       ls /workspace/output
       docker build -t mavensample-app-tekton /workspace/output
     volumeMounts:
       - mountPath: /certs/client
         name: dind-certs
       
   - name: docker-imagepush
     image: "docker.io/library/docker:stable@sha256:18ff92d3d31725b53fa6633d60bed323effb6d5d4588be7b547078d384e0d4bf"
     script: |
       #!/usr/bin/env sh
       echo $ECRPASSWORD
       ls
       docker tag mavensample-app-tekton:latest 682452625784.dkr.ecr.us-east-1.amazonaws.com/mavensample-app-tekton:latest
       docker login --username AWS --password $ECRPASSWORD 682452625784.dkr.ecr.us-east-1.amazonaws.com
       docker push 682452625784.dkr.ecr.us-east-1.amazonaws.com/mavensample-app-tekton:latest

